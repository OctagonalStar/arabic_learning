name: Flutter Build

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:  

jobs:
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.35.5'
      - name: Decode keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/release.jks
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=../release.jks" >> android/key.properties

      - run: flutter pub get
      - run: flutter build apk --release

      - uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-release.apk

  build-windows:
    name: Build Windows App
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.35.5'

      - run: flutter pub get
      - run: flutter build windows

      - uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: build/windows/x64/runner/Release

  build-macos:
    name: Build macOS App
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.35.5'

      - run: flutter pub get
      - run: flutter build macos

      - uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: build/macos/Build/Products/Release/arabic_learning.app

  build-ios:
    name: Build iOS App (no sign)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.35.5'

      - run: flutter pub get
      - run: flutter build ios --no-codesign

      - uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: build/ios/iphoneos
  build-web:
    name: Build Flutter Web
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.5'
      - run: flutter pub get
      - run: flutter build web --release

      # 上传 Web 构建结果
      - uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web

  deploy-web:
    permissions:
      contents: write
      pages: write
    name: Deploy Flutter Web to GitHub Pages
    runs-on: ubuntu-latest
    needs: build-web
    if: github.ref == 'refs/heads/main' # 仅 main 分支部署
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: web-build
          path: build/web

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: build/web
          publish_branch: gh-pages
          force_orphan: true

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-android, build-windows, build-macos, build-ios]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: android-apk
          path: .
      - uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: ./windows
      - uses: actions/download-artifact@v4
        with:
          name: macos-build
          path: ./macos
      - uses: actions/download-artifact@v4
        with:
          name: ios-build
          path: ./ios

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            app-release.apk
            windows/**
            macos/**
            ios/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cleanup:
    name: Cleanup old workflow artifacts
    runs-on: ubuntu-latest
    needs: [build-android, build-windows, build-macos, build-ios, deploy-web]
    permissions:
      actions: write
    steps:
    - name: Remove old artifacts
      uses: c-hive/gha-remove-artifacts@v1
      with:
        age: '3 days'
        skip-recent: 4